name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
  
    - name: Build with Maven
      id: maven_build
      run: mvn -B compile package --file pom.xml

    - name: Build tg message success
      if: steps.maven_build.outcome == 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market backend:
          Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was built successfully!

    - name: Build tg message fail
      if: steps.maven_build.outcome != 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market backend:
          Build failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
  
    - name: Build with Maven
      id: maven_test
      run: mvn -B compile test package --file pom.xml

    - name: Test tg message success
      if: steps.maven_test.outcome == 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market backend:
          Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was tested successfully!

    - name: Build tg message fail
      if: steps.maven_test.outcome != 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_DST }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          Market backend:
          Unit tests failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  sonarqube:
    needs: test
  
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
    
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
  
      - name: Build and analyze
        id: sonarqube_analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Yars2021_market

      - name: Sonarqube tg message success
        if: steps.sonarqube_analyze.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market backend:
            Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was analyzed with Sonarqube successfully!
  
      - name: Sonarqube tg message fail
        if: steps.sonarqube_analyze.outcome != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market backend:
            Sonarqube analysis failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!
  
  push_dockerhub:
    needs: sonarqube
  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B compile test package --file pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: yars20240201/market

      - name: Build and push Docker image
        id: dockerhub_push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Dockerhub tg message success
        if: steps.dockerhub_push.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market backend:
            Commit "${{ github.event.commits[0].message }}" by ${{ github.actor }} was pushed to dockerhub as a docker image!
  
      - name: Dockerhub tg message fail
        if: steps.dockerhub_push.outcome != 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DST }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Market backend:
            Docker image build failed for commit "${{ github.event.commits[0].message }}" by ${{ github.actor }}!

  deploy_to_vk:
    needs: push_dockerhub

    runs-on: ubuntu-latest
    steps:
      - name: Connect to remote
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: altlinux
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: cat ~/.bashrc
